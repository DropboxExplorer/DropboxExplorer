<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="busyIcon1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGAAYAPMHAP///9vl8O7z98bX5/X4+67G3fv8/T5vnkZ8sJOy0V2Mu4Ony3Gbw/7+/qG91wpP
        kyH/C05FVFNDQVBFMi4wAwEAAAAh/hoiQ3JlYXRlZCB3aXRoIENoaW1wbHkuY29tIgAh+QQABQD/ACwA
        AAAAGAAYAAAEXxDISau9OGs5CtnZgCALRXwgUIzKNBxHkRKLIksIjKQXA7eXAoMRwBASieIlMRzwLELi
        s9IQoKbYrHYLCCCv2AFSmQ04PNxNIxBo8NhXA9swKxTIgBPP0MFjDWBpgiARACH5BAAFAP8ALAAAAAAY
        ABgAAARoEMhJq704azkK2dmAIAtFfCBQjMwkIkNKJEwxKcfRptaSJ5gCYxHANAoFA4bGiPEqQuJzShnk
        nFTA4fE4ZCXb7hdgPdgoAaTyO3A4UNl0cgxqCAQNniCwBtjxPAMDRRMnT4ICdIqLWREAIfkEAAUA/wAs
        AAAAABgAGAAABGYQyEmrvThrKYbZmcAoDogNisJMA4IMprAwxbS4q2klbnIuCQGmUSh8Lo7FIqCzDJTC
        pnQScMGmEsThgMBmt11v9VURFDxewMDhIKTN6PSmQXDrCILGpCGImgYDfgAGR3+BcoiJWBEAIfkEAAUA
        /wAsAAAAABgAGAAABGEQyEmrvThrOYbY2cAwCYiJ5DQoymAKSeJKDIIw5pXY5RU4DgKmUSgYTrFAzjKI
        fZbQSYCljEoUh4PCes1uudNWRdA5gotCLnlg5oIMjSVBEJ8Y2qBA4Clp1E16aW6DhFwRACH5BAAFAP8A
        LAAAAAAYABgAAARnEMhJq704axmG2FnAMA6IDWMyBYoSmISTDNPSlqZV3FjgFITMYGA4JRKfXMUHVDop
        LNdzojgcFFNJ9ZoFRGkUwuDV7YCzYvJF0FI/EY8HImcgNCbxeE4QCEoScSomAgJFK25diYobEQAh+QQA
        BQD/ACwAAAAAGAAYAAAEaBDISau9OGspgtmZsCwFiAWjMwUME5hG4bySoyiqadn4WQyfi2EAxAwcDoLO
        EvgFl1DOSBCdLA6HRVVyzW4BogWVQgjQtgLiF1A+W8LjKuLxUOgaT8CBjtAJBE8JdAk6BIAUZmuKiyAR
        ACH5BAAFAP8ALAAAAAAYABgAAARnEMhJq704aymC2ZmwLAOIBWMxoUxgGkMhTI6iOOZV2OolDIPPBRY8
        FQqEnOVXVDonosXsKVkgEAtq9ZrVRqcTQwBM7bi0AIOAXCGMklrG4aDINRoUxByRIxDwEgVzOC9/FH5o
        iYpKEQAh+QQABQD/ACwAAAAAGAAYAAAEdxDISau9OGspgtmZ4CQDiAVJUkzBsgSmMRTC5DDMaloFXl6E
        QaCRCQxPhQJhZxEMBh+mdCJILGpTSQKBWGS1XO+3eq0YBMsvgGBUA85pYCq+cUYBjMOBYRo8HghRCHoI
        Jgh/Dz8Feg4mDIgwEgR0GgYMCD9umkwRACH5BAAFAP8ALAAAAAAYABgAAARxEMhJq704a2mI2ZnhOAOI
        EWMpCaNgAsPgSsWyFK812KpFBAENsIEJxHI+IHI5ESQSM2YCgUgwJdPqFeCEVgwCwhYAjjLBYoyhUPiY
        wJTF4bAwDQ4PxkQx14MUD4EzBXM9GguBD2kABIsbBgsIhmOUJhEAIfkEAAUA/wAsAAAAABgAGAAABG0Q
        yEmrvThraUjbmVE4AYgRDjkJqWACQUBMw7IMr1XfmBG4GYHgcxEMcLkKIZZsrlpOiUOhcEQB0+qV5QBO
        GgTDFdCZjQ3iXqGQBhm8gAQCkTAFDofFhDFnmBR4B0ADc0gbC4FtSQYLCoZjkC8RACH5BAAFAP8ALAAA
        AAAYABgAAARrEMhJq704a2nI1sZQBB9GFOMkoF4ZBMY0JAlZWgFtW4YgaITWRfC6XXo/o5IicDiSS4CD
        wXBEJdPqFdB8WhqNLaBhCIvBGQMqVupREghEwoU4LCaL+P2zOPiTAQoKOxoOfgdsUQ4LhGKOJREAIfkE
        AAUA/wAsAAAAABgAGAAABG0QyEmrvTjrzecYQod9wWR8hCgExhQ4TilWAhxehnBjRMrrM0tuFywSUEUP
        gzFISgbLJkWQKHCOA98E8Xg4nILuA+EEcB+JTGDQulCtmIJC8eUIFIg6IDFPcxIHB2QSAXNSGwWBg04O
        CTJlkEURACH5BAAFAP8ALAAAAAAYABgAAARsEMhJq704681nGEKHDeBkkIQoCI3nOIFoCW94NYShESlm
        rDILrhcsAggoo2SwWAyUAKazIkg8N8gBUYJ4PBxKgfehgHYfCR9JdyEUrpeCQgHmCBSIwiQxT3MSCIEe
        DAwxHAWBZVAFCYZQj0URACH5BAAFAP8ALAAAAAAYABgAAARkEMhJq704681nCESHfcJkDIMhEkLjFUUp
        VgIcYoY7Vw2h7pUccAg4pYiAQSIxQCqZFUKhuTH+JojDoUAkaA8MZHaLQ12j00xBoeByCAxEYuJgOzoF
        hN7DYAQ6A3oKSEkxhIdAEQAh+QQABQD/ACwAAAAAGAAYAAAEcBDISau9OOvNpwhEhwXg1JCNSBCpJBSF
        gAlJkRFwaBHH8ySiysD3QAQpPB/w6Kl1UMxJIJEIRCXTagVn5UApjMNhcAUgxIty+GAbBVq7AhlTYDDm
        G8JC4Zg47G0bBQgIClILC10bA4RpZQMFOmWTTBEAIfkEAAUA/wAsAAAAABgAGAAABG4QyEmrvTjrzacQ
        TYd9BhUEYdcQlDAMAkYUQUa87IU8TyFWAt4D8avsHoliK+HjnFJKQMDhqEWlVOvEMNBqnhXG4TC4AhDj
        5HUxLmPA7xhmwGC4N4QEowmg2zsFCgoMHg4JchsDgmpXAwU5ZpFKEQAh+QQABQD/ACwAAAAAGAAYAAAE
        bRDISau9OOvNpyFNhxGEQQlC2DXmRAxDaxlFkBlBIFfKcRSiCsF3UAQrCJ/jSKENOjkVExAo1KaS6rUS
        EEADUskCgbBhyYgldlzO5DTdzGCxeHIECwZQMq93BgoKDBMCDg5ed4EJWBICMYyQWBEAIfkEAAUA/wAs
        AAAAABgAGAAABGYQyEmrvTjrzWnrWfNRBAFeRhAYGFEEoTpaynEMJyXYx5JTtUPhN3HhOAIBcSIoFJTL
        5tMSgG6SFgcCAVsyto4lYLHtXkoZQjUTSCTMGoH7CBi44ZkBg5FgOk0cAXt9YgEDVmKJOREAIfkEAAUA
        /wAsAAAAABgAGAAABHQQyEmrvThrYJgaW8Y8JBFeCvkIE2Gew/EoUxMETRawksFLDYEgd2EcDqCTBXFc
        KC3GQ+FZIQySGyG1Irj+tt3BV7I7aSsOhSKwnXgU0zYgoWZjXJmgISNwJOwbBH6AAQl/MAwMCRMGVy8b
        AYkOcmRilJdyEQAh+QQABQD/ACwAAAAAGAAYAAAEcxDISau9OGtglhpbtjzPQYSXQj7CZBgoMBwPMzVC
        mwU61wMNwgmzQCBAsYoRkUhWikdnhYcSSimEwWB4zW4ruEaVO0koGD8nQ/G5SszojBWDg2EEhUIaYyg4
        AhMBeYAhAQsLDi5aZBkChwVuEgIBdpGWUhEAIfkEAAUA/wAsAAAAABgAGAAABHAQyEmrvThrYNwaW+Yc
        pBFeC3kIU9OcQEAylGFixMBKxj7ZGQYCEYBZhgiHsbIYFpeUgE/TuEEljUDACs1uKw3BNFO1OBiM5zWB
        Bl0B5/QbEB5TBIUC4WQYFHwBeXYXAQkJBT9aXBkChm5vAl9zk1cRACH5BAAFAP8ALAAAAAAYABgAAARx
        EMhJq704a1lS2FlxHAgVfCCQjMeUPE+SCsrhTDCMGYKRIbDWJYFQoCw0I4aBQBRSl0LxCDUJUg1ftdI4
        abeSbuAbFhCwZA6DQd0m1gPwpLBuyzOEweAMauivEgIFBYAbAgkJcWEnDTOIincCPXeUlREAIfkEAAUA
        /wAsAAAAABgAGAAABHEQyEmrvThrWZLYWXEcChUEoJSMyJQ8T5IKCuJMB3xgjdBkCFjpklAoUBfBYoG0
        MIyF1KVgbEopBEOq8btWej4vBdwVS7iWwfJjBjiWVq96wW5vDIOBNhUY1Al5dRoEDg4DJgFlGgYFDnFe
        BgSKdpRXEQAh+QQABQD/ACwAAAAAGAAYAAAEaBDISau9OGs5itjZgCAKRRCgVIzIVBxHkRIMIksI3F6N
        8GEMWOmSUDACGMJigbwwFIpBimhsTim933VrQnG7X9BgkdByC0srN0A2hzOGQMAwlXsBBDkdRCgU1D4N
        KQZ+alwGBIJvi18RADs=
</value>
  </data>
  <metadata name="workerTest.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>28, 22</value>
  </metadata>
  <metadata name="timerTimeout.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 22</value>
  </metadata>
</root>